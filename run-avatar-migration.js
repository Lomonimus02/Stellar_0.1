import pkg from 'pg';
const { Pool } = pkg;
import dotenv from 'dotenv';
dotenv.config();

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
});

async function runMigration() {
  const client = await pool.connect();
  
  try {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–∫ —á–∞—Ç–æ–≤...');
    
    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –∞–≤–∞—Ç–∞—Ä–æ–∫ —á–∞—Ç–æ–≤
    await client.query(`
      CREATE TABLE IF NOT EXISTS "chat_avatars" (
        "id" serial PRIMARY KEY NOT NULL,
        "chat_id" integer NOT NULL,
        "file_name" text NOT NULL,
        "mime_type" text NOT NULL,
        "file_size" integer NOT NULL,
        "image_data" text NOT NULL,
        "created_at" timestamp DEFAULT now() NOT NULL,
        "updated_at" timestamp DEFAULT now() NOT NULL
      );
    `);
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ chat_avatars —Å–æ–∑–¥–∞–Ω–∞');
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ has_avatar –≤ —Ç–∞–±–ª–∏—Ü—É chats
    await client.query(`
      ALTER TABLE "chats" ADD COLUMN IF NOT EXISTS "has_avatar" boolean DEFAULT false;
    `);
    console.log('‚úÖ –°—Ç–æ–ª–±–µ—Ü has_avatar –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü—É chats');
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–æ–ª–±—Ü–∞ updated_at –≤ —Ç–∞–±–ª–∏—Ü—É chats
    await client.query(`
      ALTER TABLE "chats" ADD COLUMN IF NOT EXISTS "updated_at" timestamp DEFAULT now() NOT NULL;
    `);
    console.log('‚úÖ –°—Ç–æ–ª–±–µ—Ü updated_at –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü—É chats');
    
    // –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –∞–≤–∞—Ç–∞—Ä–æ–∫ –ø–æ chat_id
    await client.query(`
      CREATE INDEX IF NOT EXISTS "chat_avatars_chat_id_idx" ON "chat_avatars" ("chat_id");
    `);
    console.log('‚úÖ –ò–Ω–¥–µ–∫—Å chat_avatars_chat_id_idx —Å–æ–∑–¥–∞–Ω');
    
    console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
    throw error;
  } finally {
    client.release();
    await pool.end();
  }
}

runMigration().catch(console.error);
