@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: hsl(210 40% 98%); /* Default light cool grey */
    --input-background: hsla(0 0% 100% / 0.8); /* White background with slight transparency */
    --input-border-color: hsl(210 30% 96%); /* Very light grey border for inputs */
    --input-focus-border-color: rgb(2, 191, 122); /* Primary green for input focus border */
    --input-text-color: hsl(210 10% 30%); /* Dark grey for input text */
    --input-placeholder-color: hsl(210 10% 65%); /* Lighter grey for input placeholders */
    --input-ring-color: rgb(2, 191, 122); /* Primary green for focus ring */
    --input-shadow: 0 1px 2px 0 hsla(0, 0%, 0%, 0.05); /* Subtle shadow for inputs */
  }

  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased text-foreground; /* bg-background removed */
    background-color: rgb(230, 255, 245); /* Very pale green base */
    /* background-image: radial-gradient(ellipse at 70% 30%, hsla(130, 70%, 90%, 0.12) 0px, transparent 50%), radial-gradient(ellipse at 30% 70%, hsla(150, 65%, 88%, 0.1) 0px, transparent 55%); */
    /* background-size: 250% 250%; */
    /* background-repeat: no-repeat; */
    /* animation: dynamicSwirlBase 60s infinite alternate ease-in-out; */
    position: relative; /* For pseudo-elements */
    z-index: 1; /* Base stacking context for body itself, above potential fixed bg layers */
    min-height: 100vh;
    overflow-x: hidden;
  }
  
  /* Специальные стили только для страницы расписания */
  .schedule-container {
    height: 100% !important;
    overflow: hidden !important;
  }
}

/* Added for sidebar glowing effect */
.sidebar-glowing-effect::before {
  content: '';
  position: absolute;
  inset: 0;
  z-index: -1; /* Behind sidebar's own background color, but above page content */
  opacity: 0.4; /* Adjust opacity of the glow effect itself - made more subtle */
  background-image: radial-gradient(circle at 15% 30%, rgba(2,191,122,0.1) 0%, transparent 35%),
                    radial-gradient(circle at 85% 65%, rgba(2,191,122,0.08) 0%, transparent 40%),
                    radial-gradient(circle at 50% 50%, rgba(2,191,122,0.05) 0%, transparent 30%);
  background-size: 300% 300%; /* Make gradients large for smooth movement */
  background-repeat: no-repeat;
  animation: animateGlowingLights 35s infinite alternate ease-in-out;
}

@keyframes animateGlowingLights {
  0% {
    background-position: 0% 0%;
  }
  25% {
    background-position: 80% 30%; /* Intermediate points for less linear feel */
  }
  50% {
    background-position: 20% 70%;
  }
  75% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 0%; /* Loop or a different end position for alternate */
  }
}

/* Dynamic Abstract Background Layers */
body::before,
body::after {
  content: '';
  position: fixed; /* Fixed to viewport */
  inset: 0;
  pointer-events: none; /* Allow clicks to pass through */
  background-repeat: no-repeat;
}

body::before {
  content: ''; /* Ensured */
  position: fixed; /* Ensured */
  inset: 0; /* Ensured */
  pointer-events: none; /* Ensured */
  z-index: -20; /* Ensured - Deepest background layer */
  background-image:
    radial-gradient(ellipse 80% 60% at 10% 20%, rgba(2, 191, 122, 0.08) 0%, transparent 50%), /* Accent green, subtle */
    radial-gradient(circle 500px at 80% 30%, rgba(255, 255, 255, 0.15) 0%, transparent 70%), /* Soft white glow */
    radial-gradient(ellipse 60% 80% at 30% 80%, rgba(2, 191, 122, 0.06) 0%, transparent 60%); /* Another accent green */
  background-size: 
    300% 300%, /* for first gradient */
    200% 200%, /* for second gradient */
    350% 250%; /* for third gradient */
  background-repeat: no-repeat; /* Ensured */
  animation: newBgLayer1 120s infinite ease-in-out alternate; 
}

body::after {
  content: ''; /* Ensured */
  position: fixed; /* Ensured */
  inset: 0; /* Ensured */
  pointer-events: none; /* Ensured */
  z-index: -10; /* Ensured - Above body::before, but still deep background */
  background-image:
    radial-gradient(ellipse 70% 90% at 80% 70%, rgba(2, 191, 122, 0.07) 0%, transparent 60%), /* Accent green, different shape/pos */
    radial-gradient(circle 400px at 30% 20%, rgba(255, 230, 180, 0.1) 0%, transparent 65%), /* Pale gold, subtle */
    radial-gradient(ellipse 90% 70% at 50% 50%, rgba(220, 255, 250, 0.1) 0%, transparent 55%); /* Very light turquoise/almost white */
  background-size: 
    350% 350%, /* for first gradient */
    250% 250%, /* for second gradient */
    300% 400%; /* for third gradient */
  background-repeat: no-repeat; /* Ensured */
  animation: newBgLayer2 150s infinite ease-in-out alternate; 
}

/* @keyframes dynamicSwirlBase {
  0% { background-position: 0% 0%, 100% 100%; }
  50% { background-position: 50% 70%, 30% 20%; }
  100% { background-position: 0% 0%, 100% 100%; }
} */

/* @keyframes dynamicSwirlLayer1 {
  0% { background-position: 0% 50%, 100% 50%; transform: scale(1) rotate(0deg); opacity: 0.7; }
  50% { background-position: 50% 0%, 50% 100%; transform: scale(1.1) rotate(5deg); opacity: 1; }
  100% { background-position: 0% 50%, 100% 50%; transform: scale(1) rotate(0deg); opacity: 0.7; }
} */

/* @keyframes dynamicSwirlLayer2 {
  0% { background-position: 50% 100%, 0% 0%; transform: scale(1.05) rotate(-3deg); opacity: 1; }
  50% { background-position: 0% 0%, 100% 100%; transform: scale(1) rotate(0deg); opacity: 0.6; }
  100% { background-position: 50% 100%, 0% 0%; transform: scale(1.05) rotate(-3deg); opacity: 1; }
} */

/* @keyframes driftLayer1 {
  0% {
    background-position: 0% 0%, 100% 0%, 0% 100%, 50% 100%;
  }
  25% {
    background-position: 50% 20%, 80% 30%, 20% 70%, 40% 80%;
  }
  50% {
    background-position: 100% 50%, 50% 60%, 50% 50%, 20% 50%;
  }
  75% {
    background-position: 50% 80%, 20% 70%, 80% 30%, 0% 20%;
  }
  100% {
    background-position: 0% 0%, 100% 0%, 0% 100%, 50% 100%;
  }
} */

/* @keyframes driftLayer2 {
  0% {
    background-position: 10% 100%, 0% 30%, 50% 0%, 100% 50%;
  }
  25% {
    background-position: 30% 70%, 30% 50%, 70% 30%, 80% 60%;
  }
  50% {
    background-position: 60% 40%, 70% 80%, 100% 70%, 50% 100%;
  }
  75% {
    background-position: 80% 10%, 100% 50%, 30% 100%, 20% 70%;
  }
  100% {
    background-position: 10% 100%, 0% 30%, 50% 0%, 100% 50%;
  }
} */ /* Correctly closes @keyframes driftLayer2 - Now commented out */

@keyframes newBgLayer1 {
  0% {
    background-position: 0% 50%, 100% 20%, 10% 90%;
    opacity: 0.8;
  }
  50% {
    background-position: 100% 60%, 0% 40%, 60% 10%;
    opacity: 1;
    transform: scale(1.02); /* Subtle zoom in/out for "breathing" */
  }
  100% {
    background-position: 0% 50%, 100% 20%, 10% 90%;
    opacity: 0.8;
    transform: scale(1);
  }
}

@keyframes newBgLayer2 {
  0% {
    background-position: 90% 10%, 20% 0%, 50% 100%;
    opacity: 0.7;
    transform: rotate(0deg) scale(1);
  }
  50% {
    background-position: 10% 50%, 80% 40%, 0% 60%;
    opacity: 1;
    transform: rotate(5deg) scale(1.05); /* Subtle rotation and scale */
  }
  100% {
    background-position: 90% 10%, 20% 0%, 50% 100%;
    opacity: 0.7;
    transform: rotate(0deg) scale(1);
  }
}

/* New styles for sidebar's own animated background layer */
/* The @layer base {} block is assumed to be closed correctly later in the file or this was the end of it. */
/* If @layer base was meant to enclose .sidebar::before, that's a different structural issue. */
/* For now, just removing the extra brace as instructed. */
/*
.sidebar::before {
  content: '';
  position: absolute;
  inset: 0; 
  border-radius: inherit; 
  z-index: -1; 
  
  
  background-image: radial-gradient(circle at 20% 80%, hsla(140, 70%, 50%, 0.25) 0%, transparent 45%),
                    radial-gradient(ellipse at 75% 25%, hsla(160, 65%, 45%, 0.3) 0px, transparent 50%),
                    radial-gradient(circle at 50% 50%, hsla(150, 60%, 50%, 0.2) 0%, transparent 40%);
  background-size: 300% 300%; 
  background-repeat: no-repeat;
  animation: dynamicSidebarLights 20s infinite alternate ease-in-out; 
  
  
} 
*/

/* Keyframes for the sidebar's own background animation */
/* Using a slightly different animation pattern for variety if dynamicSidebarLights is global */
/*
@keyframes dynamicSidebarLights {
  0% {
    background-position: 0% 0%, 100% 100%, 50% 50%;
  }
  25% {
    background-position: 80% 30%, 20% 70%, 60% 40%;
  }
  50% {
    background-position: 30% 80%, 70% 20%, 40% 60%;
  }
  75% {
    background-position: 100% 0%, 0% 100%, 50% 50%;
  }
  100% {
    background-position: 0% 0%, 100% 100%, 50% 50%;
  }
} 
*/

/* Morphing Icon Styles */
.morphing-icon-container {
  width: 28px; /* Corresponds to h-7 w-7 */
  height: 28px; /* Corresponds to h-7 w-7 */
  display: flex;
  flex-direction: column;
  justify-content: space-around; /* This will space out lines for burger */
  padding: 4px 2px; /* Small padding to keep lines from edge, adjust as needed */
  cursor: pointer;
  background: transparent;
  border: none;
  box-sizing: border-box; /* Ensure padding is included in width/height */
}

.morphing-icon-line {
  width: 100%;
  height: 3px; /* Thickness of the lines */
  background-color: currentColor; /* Inherits color from parent's text color */
  border-radius: 1.5px; /* Rounded line ends */
  transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out;
  transform-origin: center; /* Important for rotation */
}

/* Adjustments for burger state line positions if justify-around is not enough */
/* By default, lines are straight and equally spaced by justify-around */

/* Morph to 'X' when .expanded class is present */
.morphing-icon-line.line-1.expanded {
  /* translateY to center, then rotate. Spacing approx (28px_container - 3*3px_lines) / 2_spaces_around_middle_line / 2_sides = ~4.75px.
     Effective movement for top/bottom lines to center is (line_height + spacing_between_lines)
     If container height is 28px, usable space for lines is 28 - 2*padding_y(4px) = 20px.
     If lines are 3px, total line height 9px. Space for distribution = 20 - 9 = 11px.
     justify-around will put ~11/4 = ~2.75px at ends, and ~11/2 = ~5.5px between lines.
     So, line1 is at top, line3 at bottom.
     Translate Y value for line 1 and line 3: (line height + space between lines) = 3px + ~5.5px = ~8.5px
     Let's use a fixed value based on desired spacing.
     If lines are 3px, and space between is 6px:
     Line 1 moves down by 9px (3px line + 6px space)
     Line 3 moves up by 9px (3px line + 6px space)
  */
  transform: translateY(9px) rotate(45deg);
}

.morphing-icon-line.line-2.expanded {
  opacity: 0;
  transform: scaleX(0.5); /* Optional: shrink middle line before fade */
}

.morphing-icon-line.line-3.expanded {
  transform: translateY(-9px) rotate(-45deg);
}

/* VisionOS Schedule Styles */
/* Note: Many visionOS effects like frosted glass and rounded corners are already achievable
   and applied via Tailwind utility classes (e.g., bg-white/30, backdrop-blur-md, rounded-2xl).
   These custom classes are for enhancements or very specific composed effects if Tailwind isn't enough.
   Primary accent color from existing variables: rgb(2, 191, 122) */

.vision-glass-light {
  background-color: rgba(255, 255, 255, 0.4); /* Slightly more opaque than typical /30 for base elements */
  backdrop-filter: blur(12px); /* Slightly more blur */
  -webkit-backdrop-filter: blur(12px);
}

.vision-glass-dark {
  background-color: rgba(50, 50, 50, 0.4);
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
}

.vision-shadow-soft {
  /* A bit softer and more diffused than Tailwind's shadow-xl */
  box-shadow: 0px 8px 28px rgba(0, 0, 0, 0.1), 0px 5px 15px rgba(0, 0, 0, 0.07);
}

.vision-shadow-medium {
  /* A step up from soft, good for active/lifted elements */
  box-shadow: 0px 12px 36px rgba(0, 0, 0, 0.12), 0px 7px 20px rgba(0, 0, 0, 0.09);
}

/* ScheduleCarousel: Mobile Top Day Navigation Bar Active Style */
.active-day-style {
  background-color: rgba(2, 191, 122, 0.15); /* Use site's primary green, with transparency */
  /* color: rgb(2, 191, 122); /* Text color can be the primary green if background is light enough */
  color: rgb(0, 100, 60); /* Darker green for better contrast on the light active background */
  font-weight: 600; /* Bolder font for active day */
  border-radius: 8px; /* Consistent with sidebar hover/active states if applicable */
  /* box-shadow: 0 0 10px rgba(2, 191, 122, 0.3); /* Optional: subtle glow for active day */
}

/* ScheduleDayCard: Active Desktop Card Highlight (using primary green) */
/* This class can be added to the ScheduleDayCard component in schedule-day-card.tsx if needed,
   though current implementation uses Tailwind directly: border-green-400/50 bg-green-500/10.
   This CSS version provides an alternative way to manage it.
   The Tailwind classes `border-emerald-400/50` and `bg-emerald-500/10` (or similar for the specific green)
   are preferred if they achieve the desired effect, for consistency.
   If we were to use this CSS class, it would look like:
*/
.vision-active-card-highlight {
  border-color: rgba(2, 191, 122, 0.5) !important; /* Ensure it overrides base border */
  background-color: rgba(2, 191, 122, 0.08) !important; /* Subtle background tint */
  /* box-shadow: 0px 12px 36px rgba(2, 191, 122, 0.15), 0px 7px 20px rgba(2, 191, 122, 0.1); /* Greenish shadow */
}


/* General interactive element styling for visionOS feel (example for buttons if not using Tailwind) */
.vision-button-style {
  padding: 0.5rem 1rem;
  border-radius: 0.75rem; /* More rounded than typical buttons */
  font-weight: 500;
  transition: all 0.2s ease-in-out;
  border: 1px solid rgba(255, 255, 255, 0.2); /* Light border */
}

.vision-button-style:hover {
  transform: translateY(-1px); /* Subtle lift */
}

.vision-button-style.light {
  background-color: rgba(255, 255, 255, 0.3);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  color: #333; /* Darker text for light buttons */
}
.vision-button-style.light:hover {
  background-color: rgba(255, 255, 255, 0.5);
  box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);
}

.vision-button-style.dark {
  background-color: rgba(50, 50, 50, 0.3);
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  color: #f0f0f0; /* Lighter text for dark buttons */
}
.vision-button-style.dark:hover {
  background-color: rgba(50, 50, 50, 0.5);
  box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.2);
}
