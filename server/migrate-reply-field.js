import postgres from 'postgres';

async function runMigration() {
  const sql = postgres({
    host: 'localhost',
    port: 5432,
    database: 'stellar_db',
    username: 'postgres',
    password: 'password'
  });

  try {
    console.log('–ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è reply_to_message_id...');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ reply_to_message_id
    await sql`ALTER TABLE messages ADD COLUMN IF NOT EXISTS reply_to_message_id INTEGER`;
    console.log('‚úÖ –ü–æ–ª–µ reply_to_message_id –¥–æ–±–∞–≤–ª–µ–Ω–æ');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á
    await sql`
      DO $$ 
      BEGIN
        IF NOT EXISTS (
          SELECT 1 FROM information_schema.table_constraints 
          WHERE constraint_name = 'fk_reply_to_message'
        ) THEN
          ALTER TABLE messages ADD CONSTRAINT fk_reply_to_message 
            FOREIGN KEY (reply_to_message_id) REFERENCES messages(id) ON DELETE SET NULL;
        END IF;
      END $$;
    `;
    console.log('‚úÖ –í–Ω–µ—à–Ω–∏–π –∫–ª—é—á –¥–æ–±–∞–≤–ª–µ–Ω');
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å
    await sql`CREATE INDEX IF NOT EXISTS idx_messages_reply_to_message_id ON messages(reply_to_message_id)`;
    console.log('‚úÖ –ò–Ω–¥–µ–∫—Å –¥–æ–±–∞–≤–ª–µ–Ω');
    
    console.log('üéâ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
  } finally {
    await sql.end();
  }
}

runMigration();
